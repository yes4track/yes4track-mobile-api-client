openapi: 3.0.1
info:
  title: Caspian.Yes4Track.Service API
  description: Caspian.Yes4Track.Service API
  termsOfService: 'https://github.com/'
  contact:
    name: Administrator
    url: 'https://github.com/jefersonmlopes'
    email: admin@yes4track.com
  license:
    name: Use under MIT License
    url: 'https://github.com/'
  version: v1
paths:
  '/yes4track/v1/adventures/{id}':
    delete:
      tags:
        - Adventure
      summary: Delete Adventure by Id
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: ae824e15-34f8-4548-9f03-f2c363c858b7
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Adventure
      summary: Get Adventure by id
      operationId: GetByIdAdventure
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: c2e05997-9907-4ea0-8aca-3676e46ca62d
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllAdventureResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Adventure
      summary: Update part of Adventure
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/adventures/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 49d7ba42-454c-4768-b869-6a00636e44c5
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Adventure
      summary: Update Adventure
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 628b0aa5-ce1d-4a6c-8d8d-260ed96a4409
      requestBody:
        description: Adventure to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAdventureRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/experiences/{experienceId}':
    delete:
      tags:
        - Adventure
      summary: Delete Adventure Experience
      parameters:
        - name: id
          in: path
          description: Id Adventure
          required: true
          schema:
            type: string
            description: Id Adventure
            format: uuid
        - name: experienceId
          in: path
          description: Id Experience
          required: true
          schema:
            type: string
            description: Id Experience
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 86629487-c7ab-4dea-8651-dbbde2284a8f
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Adventure
      summary: Add Adventure Experience
      parameters:
        - name: id
          in: path
          description: Id Adventure
          required: true
          schema:
            type: string
            description: Id Adventure
            format: uuid
        - name: experienceId
          in: path
          description: Id Experience
          required: true
          schema:
            type: string
            description: Id Experience
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 712945b7-372c-4643-85dd-8924833eb17f
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/images/{imageId}':
    delete:
      tags:
        - Adventure
      summary: Delete Adventure by Id
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: imageId
          in: path
          description: Adventure Image id
          required: true
          schema:
            type: string
            description: Adventure Image id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: e2764fa7-98a0-4880-b53c-6de8b59cc71e
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/likes':
    delete:
      tags:
        - Adventure
      summary: Delete Adventure Likes by Id
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: da67760e-f7a7-4dd6-9bb0-8ee0fc510c9c
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Adventure
      summary: Get All Adventure Likes by filter with pagination
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: bee16fe6-8bf6-446e-9b62-f8dcd79091fb
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedAdventureLikesResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Adventure
      summary: Create Adventure Likes
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 3c2e7e01-b4f4-4d4d-a90f-548718a69c8d
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAdventureLikesResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/videos/{videoId}':
    delete:
      tags:
        - Adventure
      summary: Delete Adventure by Id
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: videoId
          in: path
          description: Adventure Video id
          required: true
          schema:
            type: string
            description: Adventure Video id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: a09c3c99-5d1b-410f-a068-0f0ad8c0153a
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/adventures:
    get:
      tags:
        - Adventure
      summary: Get All Adventure by filter with pagination
      parameters:
        - name: companyId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: description
          in: query
          schema:
            type: string
            nullable: true
        - name: level
          in: query
          schema:
            $ref: '#/components/schemas/LevelType'
        - name: codeRequired
          in: query
          schema:
            type: boolean
            nullable: true
        - name: isActive
          in: query
          schema:
            type: boolean
            nullable: true
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/AdventureType'
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: dd352028-31b7-435a-8141-006c7465f587
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedAdventureResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Adventure
      summary: Create Adventure
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 0ed6637a-0e98-4987-9958-9b3ecc9a6d63
      requestBody:
        description: Adventure to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAdventureRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostAdventureResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/code':
    get:
      tags:
        - Adventure
      summary: Get Adventure Code by id
      operationId: GetByIdAdventureCode
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: d5b7d144-1c9a-4bec-b977-71ba0faeec5e
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdAdventureCodeResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/likes/{likeId}':
    get:
      tags:
        - Adventure
      summary: Get Adventure Like by id
      operationId: GetByIdAdventureLikes
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: likeId
          in: path
          description: Adventure Like Id
          required: true
          schema:
            type: string
            description: Adventure Like Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 60b0d2a8-1145-4172-ba48-96965aae7b00
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllAdventureLikesResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the usr isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existene of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/likes/userLiked':
    get:
      tags:
        - Adventure
      summary: Get User Liked Adventure
      operationId: GetUserLikedAdventure
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 8b7ef128-507d-4a6b-9904-311ac03a8bc6
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserLikedAdventureResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the usr isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existene of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/activate':
    post:
      tags:
        - Adventure
      summary: Activate Adventure
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f208c601-89e6-4a56-b719-5d89ff58c499
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
      deprecated: true
  '/yes4track/v1/adventures/{id}/images':
    post:
      tags:
        - Adventure
      summary: Add images in adventure
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 4cf144a2-7ba9-4d80-8059-d82d71f4c8ef
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/videos':
    post:
      tags:
        - Adventure
      summary: Add videos in adventure
      parameters:
        - name: id
          in: path
          description: Adventure Id
          required: true
          schema:
            type: string
            description: Adventure Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f6bb9aab-3c99-43e1-952d-cdc11e487e4c
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/adventures/{id}/code/{code}/check':
    post:
      tags:
        - Adventure
      summary: Check Adventure Code
      parameters:
        - name: id
          in: path
          description: Adventure id
          required: true
          schema:
            type: string
            description: Adventure id
            format: uuid
        - name: code
          in: path
          description: Adventure Code
          required: true
          schema:
            type: string
            description: Adventure Code
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: c54d459b-3b87-4f13-b6f6-42a9f5ec0b30
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCheckAdventureCodeResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/audits:
    get:
      tags:
        - Audit
      summary: Get All Audit by filter with pagination
      parameters:
        - name: parentId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: entity
          in: query
          schema:
            type: string
            nullable: true
        - name: action
          in: query
          schema:
            $ref: '#/components/schemas/ActionType'
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
        - name: userCreated
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: userUpdated
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 6d3a794f-b133-41e8-b3e8-a1779741fa66
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedAuditResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/companies/{id}':
    delete:
      tags:
        - Company
      summary: Delete Company by Id
      parameters:
        - name: id
          in: path
          description: Company id
          required: true
          schema:
            type: string
            description: Company id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 73bd3745-39b5-448a-9795-e3a1422f45c5
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Company
      summary: Get Company by id
      operationId: GetByIdCompany
      parameters:
        - name: id
          in: path
          description: Company id
          required: true
          schema:
            type: string
            description: Company id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 007cd81f-2b12-4702-a1b2-74b8e216179a
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllCompanyResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Company
      summary: Update part of Company
      parameters:
        - name: id
          in: path
          description: Company id
          required: true
          schema:
            type: string
            description: Company id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: dbaeed9b-2e05-4650-af8f-5d7a0250b42c
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Company
      summary: Update Company
      parameters:
        - name: id
          in: path
          description: Company Id
          required: true
          schema:
            type: string
            description: Company Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 706a93c7-bc1d-4ac7-9e45-981cbf3e216a
      requestBody:
        description: Company to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutCompanyRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/companies:
    get:
      tags:
        - Company
      summary: Get All Company by filter with pagination
      parameters:
        - name: legalName
          in: query
          schema:
            type: string
            nullable: true
        - name: fantasyName
          in: query
          schema:
            type: string
            nullable: true
        - name: registrationNumber
          in: query
          schema:
            type: string
            nullable: true
        - name: contactEmail
          in: query
          schema:
            type: string
            nullable: true
        - name: contactPhone
          in: query
          schema:
            type: string
            nullable: true
        - name: companies
          in: query
          schema:
            type: string
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 85d79429-68f2-4243-b11b-170c32bf359a
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedCompanyResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Company
      summary: Create Company
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 49692552-422b-4961-a9b2-24c2d4cdf123
      requestBody:
        description: Company to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCompanyRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCompanyResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}':
    delete:
      tags:
        - Experience
      summary: Delete Experience by Id
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: c7406cee-4ce6-4ef5-9d7f-0c4f69eeb8bc
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Experience
      summary: Get Experience by id
      operationId: GetByIdExperience
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 6b4b056e-0510-44a1-9386-0fa82631bab6
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllExperienceResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Experience
      summary: Update part of Experience
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/Experience/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 32fde1b0-e2cd-42be-baaf-188e3457144e
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Experience
      summary: Update Experience
      parameters:
        - name: id
          in: path
          description: Experience Id
          required: true
          schema:
            type: string
            description: Experience Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: ea2a01bc-ba0a-439a-b2eb-8f1c332ed23d
      requestBody:
        description: Experience to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutExperienceRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/images/{imageId}':
    delete:
      tags:
        - Experience
      summary: Delete Experience by Id
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: imageId
          in: path
          description: Experience Image id
          required: true
          schema:
            type: string
            description: Experience Image id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 586ec34a-d593-47d3-9745-0a4a57fc156d
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/videos/{videoId}':
    delete:
      tags:
        - Experience
      summary: Delete Experience by Id
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: videoId
          in: path
          description: Experience Video id
          required: true
          schema:
            type: string
            description: Experience Video id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: bf04fbd0-592b-4072-ab55-092d9dcc6000
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/experiences:
    get:
      tags:
        - Experience
      summary: Get All Experience by filter with pagination
      parameters:
        - name: companyId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: description
          in: query
          schema:
            type: string
            nullable: true
        - name: codeRequired
          in: query
          schema:
            type: boolean
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: d688910b-4878-47bc-a833-18fe1c247273
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedExperienceResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Experience
      summary: Create Experience
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 9da9c55e-8815-448b-9b27-4ea702287ae9
      requestBody:
        description: Experience to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostExperienceRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostExperienceResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/code':
    get:
      tags:
        - Experience
      summary: Get Experience Code by id
      operationId: GetByIdExperienceCode
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: e5b714a8-a2ef-4ae0-a46e-0f4b9f054f5a
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdExperienceCodeResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/activate':
    post:
      tags:
        - Experience
      summary: Activate Experience
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: d40ce42c-eb32-4783-b926-18779965370d
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/code/{code}/check':
    post:
      tags:
        - Experience
      summary: Check Experience Code
      parameters:
        - name: id
          in: path
          description: Experience id
          required: true
          schema:
            type: string
            description: Experience id
            format: uuid
        - name: code
          in: path
          description: Experience Code
          required: true
          schema:
            type: string
            description: Experience Code
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: b663084f-ee67-4c7e-952e-d5d8bec3362c
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCheckExperienceCodeResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/images':
    post:
      tags:
        - Experience
      summary: Add images in Experience
      parameters:
        - name: id
          in: path
          description: Experience Id
          required: true
          schema:
            type: string
            description: Experience Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 007240af-2f91-4920-a1ad-d821b1c943a6
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/experiences/{id}/videos':
    post:
      tags:
        - Experience
      summary: Add videos in an Experience
      parameters:
        - name: id
          in: path
          description: Experience Id
          required: true
          schema:
            type: string
            description: Experience Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 935e5fc0-1c83-4d48-9753-ba2c600b814a
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/geolocations/{lat}/{lng}':
    get:
      tags:
        - Geolocation
      summary: Get Address by Lat Long
      operationId: GetAddressByLatLong
      parameters:
        - name: lat
          in: path
          description: latitude
          required: true
          schema:
            type: number
            description: latitude
            format: double
        - name: lng
          in: path
          description: longitude
          required: true
          schema:
            type: number
            description: longitude
            format: double
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 87297882-4098-4598-ad95-19bc0cdd0820
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/notifications/{id}':
    delete:
      tags:
        - Notification
      summary: Delete Notification by Id
      parameters:
        - name: id
          in: path
          description: Notification id
          required: true
          schema:
            type: string
            description: Notification id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: ffc0c1ca-0304-4f99-ae47-0a5c017935a2
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Notification
      summary: Get Notification by id
      operationId: GetByIdNotification
      parameters:
        - name: id
          in: path
          description: Notification id
          required: true
          schema:
            type: string
            description: Notification id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 80e19200-92b4-4d02-a907-5a784bc14403
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllNotificationResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Notification
      summary: Update part of Notification
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/Notification/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Notification id
          required: true
          schema:
            type: string
            description: Notification id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 28488f2f-426a-496e-b6c3-30e8d036c0a5
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Notification
      summary: Update Notification
      parameters:
        - name: id
          in: path
          description: Notification Id
          required: true
          schema:
            type: string
            description: Notification Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 7b7d852a-32a0-4629-a532-8ef8abe6b965
      requestBody:
        description: Notification to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutNotificationRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/notifications:
    get:
      tags:
        - Notification
      summary: Get All Notification by filter with pagination
      parameters:
        - name: message
          in: query
          schema:
            type: string
            nullable: true
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/NotificationType'
        - name: userPhone
          in: query
          schema:
            type: string
            nullable: true
        - name: userName
          in: query
          schema:
            type: string
            nullable: true
        - name: userEmail
          in: query
          schema:
            type: string
            nullable: true
        - name: userId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: da0a240e-e2cb-4339-95f2-51e358e820e4
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedNotificationResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Notification
      summary: Create Notification
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f4174fce-cd98-45d5-93c3-740891549671
      requestBody:
        description: Notification to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNotificationRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNotificationResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/sponsors/{id}':
    delete:
      tags:
        - Sponsor
      summary: Delete Sponsor by Id
      parameters:
        - name: id
          in: path
          description: Sponsor id
          required: true
          schema:
            type: string
            description: Sponsor id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 8c1aa184-1003-4510-8d82-be8bdb84cbe5
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Sponsor
      summary: Get Sponsor by id
      operationId: GetByIdSponsor
      parameters:
        - name: id
          in: path
          description: Sponsor id
          required: true
          schema:
            type: string
            description: Sponsor id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: c110f896-e6ff-417d-9202-4dbed0a45950
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllSponsorResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Sponsor
      summary: Update part of Sponsor
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/Sponsor/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Sponsor id
          required: true
          schema:
            type: string
            description: Sponsor id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: b48fd53c-85bb-4791-89f3-26bcea361d94
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Sponsor
      summary: Update Sponsor
      parameters:
        - name: id
          in: path
          description: Sponsor Id
          required: true
          schema:
            type: string
            description: Sponsor Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 68576858-351a-45eb-97db-0dd7da455cc2
      requestBody:
        description: Sponsor to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSponsorRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/sponsors:
    get:
      tags:
        - Sponsor
      summary: Get All Sponsor by filter with pagination
      parameters:
        - name: companyId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: isActive
          in: query
          schema:
            type: boolean
            nullable: true
        - name: city
          in: query
          schema:
            type: string
            nullable: true
        - name: state
          in: query
          schema:
            type: string
            nullable: true
        - name: country
          in: query
          schema:
            type: string
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: fc06d072-3dd1-4370-9e89-70f66d0eed72
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedSponsorResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Sponsor
      summary: Create Sponsor
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 712f1005-4771-4eaa-9a70-194952ee5ad3
      requestBody:
        description: Sponsor to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostSponsorRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostSponsorResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/templates/{id}':
    delete:
      tags:
        - Template
      summary: Delete Template by Id
      parameters:
        - name: id
          in: path
          description: Template id
          required: true
          schema:
            type: string
            description: Template id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: aa26ff9f-cf71-4a3a-a996-7a8287d97d72
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Template
      summary: Get Template by id
      operationId: GetByIdTemplate
      parameters:
        - name: id
          in: path
          description: Template id
          required: true
          schema:
            type: string
            description: Template id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 71c2291d-7774-49ad-b3d0-435f45b490a5
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllTemplateResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Template
      summary: Update part of Template
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/Template/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Template id
          required: true
          schema:
            type: string
            description: Template id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: a2aef73d-18be-4416-9f12-8077804b478b
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Template
      summary: Update Template
      parameters:
        - name: id
          in: path
          description: Template Id
          required: true
          schema:
            type: string
            description: Template Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 3d963dc9-6c2c-41d5-b42f-d9af6b821a1e
      requestBody:
        description: Template to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTemplateRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/templates:
    get:
      tags:
        - Template
      summary: Get All Template by filter with pagination
      parameters:
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 50d045e4-bfef-49a8-884e-5560b51ab4fb
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedTemplateResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Template
      summary: Create Template
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 4beafdcc-19b7-424a-bd59-f9badf4be813
      requestBody:
        description: Template to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTemplateRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTemplateResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/templates/{id}/photos/upload':
    post:
      tags:
        - Template
      summary: Create Template
      parameters:
        - name: id
          in: path
          description: Template Id
          required: true
          schema:
            type: string
            description: Template Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 88b5e00f-8caf-4ca4-bdbc-7454e49ce889
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/tracks/{id}':
    delete:
      tags:
        - Track
      summary: Delete Track by Id
      parameters:
        - name: id
          in: path
          description: Track id
          required: true
          schema:
            type: string
            description: Track id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 57064961-9736-49b1-9d56-d89d94e7c10b
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Track
      summary: Get Track by id
      operationId: GetByIdTrack
      parameters:
        - name: id
          in: path
          description: Track id
          required: true
          schema:
            type: string
            description: Track id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 902f3c7b-1455-4c55-9d84-24db9ac62d2d
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllTrackResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Track
      summary: Update part of Track
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/Track/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Track id
          required: true
          schema:
            type: string
            description: Track id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: ad35899c-56c8-4d2e-b993-7fca6f78d5fd
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Track
      summary: Update Track
      parameters:
        - name: id
          in: path
          description: Track Id
          required: true
          schema:
            type: string
            description: Track Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: c139aaff-0c95-46fa-82dd-1b279268abad
      requestBody:
        description: Track to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTrackRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/tracks:
    get:
      tags:
        - Track
      summary: Get All Track by filter with pagination
      parameters:
        - name: adventureId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: source
          in: query
          schema:
            $ref: '#/components/schemas/TrackSource'
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 5b471d47-ab11-4709-a936-500bf8b3d7d0
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedTrackResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Track
      summary: Create Track
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 1f798757-c773-4280-86de-750f8ad2a1bf
      requestBody:
        description: Track to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTrackRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrackResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/tracks/{id}/geodata':
    get:
      tags:
        - Track
      summary: Get Track Geo Data by id
      operationId: GetByIdTrackGeoData
      parameters:
        - name: id
          in: path
          description: Track id
          required: true
          schema:
            type: string
            description: Track id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 2559218a-736a-405c-819f-f74146f89fba
      responses:
        '200':
          description: Ok - The request has succeeded.
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Track
      summary: Create Track GeoData
      parameters:
        - name: id
          in: path
          description: Track Id
          required: true
          schema:
            type: string
            description: Track Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 79db8676-3973-4a93-9c93-f91b170828d0
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrackGeoDataResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/tracks/geolocation:
    get:
      tags:
        - Track
      summary: Get Track Geo Location by id
      operationId: GetByIdTrackGeoLocation
      parameters:
        - name: trackId
          in: query
          description: Track id
          schema:
            type: string
            description: Track id
            format: uuid
            nullable: true
        - name: adventureId
          in: query
          description: Track id
          schema:
            type: string
            description: Track id
            format: uuid
            nullable: true
        - name: experienceId
          in: query
          description: Track id
          schema:
            type: string
            description: Track id
            format: uuid
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 00dd4e82-2578-4982-b8f7-6c77904e588a
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackGeoLocationDto'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/tracks/{id}/statistic':
    put:
      tags:
        - Track
      summary: Update Track Statistic
      parameters:
        - name: id
          in: path
          description: Track Id
          required: true
          schema:
            type: string
            description: Track Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 10b9a9b4-9a6a-4dc2-b971-6177af9aa1fc
      requestBody:
        description: Track to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTrackStatisticRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/trails/{id}/angel/{angelId}':
    delete:
      tags:
        - Trail
      summary: Delete Trail Angel by Id
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: angelId
          in: path
          description: Angel id
          required: true
          schema:
            type: string
            description: Angel id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: b5f2d734-9dba-4247-ad8e-4b3b33d9a5c8
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Trail
      summary: Add Trail Angel by Id
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: angelId
          in: path
          description: Angel id
          required: true
          schema:
            type: string
            description: Angel id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 24f39b4a-a63d-4c36-a76b-b75d32584b43
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/trails/{id}':
    delete:
      tags:
        - Trail
      summary: Delete Trail by Id
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 16933167-ba27-47fb-88e8-a24e9c852fd3
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - Trail
      summary: Get Trail by id
      operationId: GetByIdTrail
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f8b326aa-cd3d-4f55-afa2-94a8475522ee
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllTrailResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - Trail
      summary: Update part of Trail
      description: "Sample request:\r\n            \r\n    PATCH /yes4track/v1/Trail/{id}\r\n    [\r\n        {\r\n            \"op\": \"replace\",\r\n            \"path\": \"/atribute_name\",\r\n            \"value\": \"new value\"\r\n        }\r\n    ]"
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 6569493b-d275-47ea-967d-ea062b08b7ee
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Trail
      summary: Update Trail
      parameters:
        - name: id
          in: path
          description: Trail Id
          required: true
          schema:
            type: string
            description: Trail Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f033b755-3eae-4d61-9d12-30691dee5efd
      requestBody:
        description: Trail to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTrailRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/trails/{id}/sponsor/{sponsorId}':
    delete:
      tags:
        - Trail
      summary: Delete Trail Sponsor by Id
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: sponsorId
          in: path
          description: Sponsor id
          required: true
          schema:
            type: string
            description: Sponsor id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: e1e4c84b-4d13-4b9c-b6b3-aecff0914c8a
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Trail
      summary: Add Trail Sponsor by Id
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: sponsorId
          in: path
          description: Sponsor id
          required: true
          schema:
            type: string
            description: Sponsor id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 3ecea280-af76-45b7-98ee-b36dc0e402ac
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/trails/activeByAngel:
    get:
      tags:
        - Trail
      summary: Get All Active Trail by Angel
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: b7553a5c-4d42-4dd5-8817-515b2a40e18e
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllActiveTrailByAngelResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/trails:
    get:
      tags:
        - Trail
      summary: Get All Trail by filter with pagination
      parameters:
        - name: adventureId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: startDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: endDate
          in: query
          schema:
            type: string
            format: date-time
            nullable: true
        - name: adventureName
          in: query
          schema:
            type: string
            nullable: true
        - name: userCreated
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: a0364603-cc50-4764-9cde-20a16e386c0b
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedTrailResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Trail
      summary: Create Trail
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 0bc7e592-7ab7-42f2-9d00-f30be8cfadfa
      requestBody:
        description: Trail to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTrailRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrailResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/trails/{id}/geodata':
    get:
      tags:
        - Trail
      summary: Get Trail Geo Data by id
      operationId: GetByIdTrailGeoData
      parameters:
        - name: id
          in: path
          description: Trail id
          required: true
          schema:
            type: string
            description: Trail id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 506e472a-c468-454e-88fc-d90f909e4365
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetByIdTrailGeoDataetByIdResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Trail
      summary: Create Trail GeoData
      parameters:
        - name: id
          in: path
          description: Trail Id
          required: true
          schema:
            type: string
            description: Trail Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: b1d8c29f-152c-4a44-9481-c09e642769da
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostTrailGeoDataResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/trails/{id}/geodata/chunck':
    post:
      tags:
        - Trail
      summary: Add Chunck Trail GeoData
      parameters:
        - name: id
          in: path
          description: Trail Id
          required: true
          schema:
            type: string
            description: Trail Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 83e83c0e-2a76-4297-a4f2-ba2c91a4b522
      requestBody:
        description: Object Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostTrailChunckGeoDataRequest'
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/trails/{id}/images':
    post:
      tags:
        - Trail
      summary: Add images in trail
      parameters:
        - name: id
          in: path
          description: Trail Id
          required: true
          schema:
            type: string
            description: Trail Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: df929cbd-9fe9-42ad-8b8e-33968cfbdad7
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/users/{id}/companies/{companyId}':
    delete:
      tags:
        - User
      summary: Delete User Company
      parameters:
        - name: id
          in: path
          description: Id User
          required: true
          schema:
            type: string
            description: Id User
            format: uuid
        - name: companyId
          in: path
          description: Id Company
          required: true
          schema:
            type: string
            description: Id Company
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f74f8279-1d43-4ab5-bf6d-cc5671c3c9ab
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - User
      summary: Add User Company
      parameters:
        - name: id
          in: path
          description: Id User
          required: true
          schema:
            type: string
            description: Id User
            format: uuid
        - name: companyId
          in: path
          description: Id Company
          required: true
          schema:
            type: string
            description: Id Company
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 619a43d2-8cd2-42a1-9e44-1473f208344a
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/users/{id}':
    delete:
      tags:
        - User
      summary: Delete User by Id
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
            description: User id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 1edbec38-b578-44af-b1ec-db4c97e08630
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    get:
      tags:
        - User
      summary: Get User by id
      operationId: GetByIdUser
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
            description: User id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: e5185da3-1a7a-4bea-ae09-df6234613d0b
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllUserResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    patch:
      tags:
        - User
      summary: Update part of User
      parameters:
        - name: id
          in: path
          description: User id
          required: true
          schema:
            type: string
            description: User id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: bef31ef3-2567-45c3-a012-c5c7e0166493
      requestBody:
        description: Atributes values
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Operation'
              description: Atributes values
        required: true
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - User
      summary: Update User
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: string
            description: User Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 58b06c58-c17b-4394-9644-8db847097c65
      requestBody:
        description: User to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/users:
    get:
      tags:
        - User
      summary: Get All User by filter with pagination
      parameters:
        - name: name
          in: query
          schema:
            type: string
            nullable: true
        - name: phone
          in: query
          schema:
            type: string
            nullable: true
        - name: email
          in: query
          schema:
            type: string
            nullable: true
        - name: isActive
          in: query
          schema:
            type: boolean
            nullable: true
        - name: isAdmin
          in: query
          schema:
            type: boolean
            nullable: true
        - name: companyId
          in: query
          schema:
            type: string
            format: uuid
            nullable: true
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          description: 'Sorting atributes, sample: id.desc,name.asc'
          schema:
            type: string
            description: 'Sorting atributes, sample: id.desc,name.asc'
            nullable: true
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: eb22f283-d3ea-4025-8e61-140702a911ef
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllPagedUserResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - User
      summary: Add User
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: dbf7c082-f5ab-4696-b15e-06f9eadce2d7
      requestBody:
        description: User to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/users/accesstoken:
    post:
      tags:
        - User
      summary: User SignIn
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 349b4508-ea8d-461f-ba68-4b3d1ea307bf
      requestBody:
        description: User to SignIn
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserAccessTokenRequest'
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserAccessTokenResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/users/resendcode:
    post:
      tags:
        - User
      summary: Resend Code
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 9e90e580-9ab0-471c-96f0-9932001917d2
      requestBody:
        description: Phone and Hash
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostPostUserResendCodeRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/users/setupangel:
    post:
      tags:
        - User
      summary: Setup User default Angel
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: f815d15d-ad03-40e0-bf2c-9a302fed513b
      requestBody:
        description: Angel to Setup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserSetupAngelRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/users/setupsponsor/{id}':
    post:
      tags:
        - User
      summary: Setup User default Sponsor
      parameters:
        - name: id
          in: path
          description: Sponsor Id
          required: true
          schema:
            type: string
            description: Sponsor Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 9a0a1506-61c8-4f19-bb7c-e22c0046b856
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/users/signin:
    post:
      tags:
        - User
      summary: User SignIn
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 76b179cd-ad9a-4f48-ada4-4998791e2912
      requestBody:
        description: User to SignIn
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserSignInRequest'
      responses:
        '200':
          description: Ok - The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserSignInResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  /yes4track/v1/users/signup:
    post:
      tags:
        - User
      summary: User SignUp
      parameters:
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: ca5f67bc-1aa2-44ae-893c-6b9f18e25f2e
      requestBody:
        description: User to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
      responses:
        '201':
          description: 'Created - The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a POST request, or after some PUT requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostUserResponse'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/users/{id}/location':
    put:
      tags:
        - User
      summary: Update User Location
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: string
            description: User Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: c5354c7a-c3c4-45f5-af34-a2741a6bad4e
      requestBody:
        description: GeoLocation and Date
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutUserLocationRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/yes4track/v1/users/{id}/photo':
    put:
      tags:
        - User
      summary: Update User Photo
      parameters:
        - name: id
          in: path
          description: User Id
          required: true
          schema:
            type: string
            description: User Id
            format: uuid
        - name: x-api-key
          in: header
          description: Your Api Key
          schema:
            type: string
        - name: x-csrf-token
          in: header
          description: CSRF Protection
          schema:
            type: string
            default: 44da0f78-c5b3-4454-925d-4bef7b43c0cb
      requestBody:
        description: User to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfilePhotoRequest'
      responses:
        '204':
          description: 'No Content - There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones.'
        '400':
          description: Bad Request – This means that client-side input fails validation.
        '401':
          description: Unauthorized – This means the user isn’t not authorized to access a resource. It usually returns when the user isn’t authenticated.
        '403':
          description: 'Forbidden – This means the user is authenticated, but it’s not allowed to access a resource.'
        '404':
          description: 'Not Found – The server can not find requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 to hide the existence of a resource from an unauthorized client. This response code is probably the most famous one due to its frequent occurence on the web.'
        '412':
          description: Precondition Failed - The client has indicated preconditions in its headers which the server does not meet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '422':
          description: Unprocessable Entity - The request was well-formed but was unable to be followed due to semantic errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Intertal Server Error - The server has encountered a situation it doesn't know how to handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        errorCode:
          type: string
          nullable: true
        messages:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    LevelType:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    AdventureType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    DocumentVersion:
      type: object
      additionalProperties: false
    ImageUrl:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          format: uuid
        userUpdated:
          type: string
          format: uuid
        version:
          $ref: '#/components/schemas/DocumentVersion'
        fileName:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        sequence:
          type: integer
          format: int32
      additionalProperties: false
    VideoUrl:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          format: uuid
        userUpdated:
          type: string
          format: uuid
        version:
          $ref: '#/components/schemas/DocumentVersion'
        fileName:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
        sequence:
          type: integer
          format: int32
      additionalProperties: false
    Address:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          format: uuid
        userUpdated:
          type: string
          format: uuid
        version:
          $ref: '#/components/schemas/DocumentVersion'
        zipCode:
          type: string
          nullable: true
        street:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
        complement:
          type: string
          nullable: true
        neighborhood:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        latitude:
          type: number
          format: double
          nullable: true
        longitude:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    GetAllAdventureResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/LevelType'
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/AdventureType'
        id:
          type: string
          format: uuid
        likes:
          type: integer
          format: int64
        imagesUrl:
          type: array
          items:
            $ref: '#/components/schemas/ImageUrl'
          nullable: true
        videosUrl:
          type: array
          items:
            $ref: '#/components/schemas/VideoUrl'
          nullable: true
        codeRequired:
          type: boolean
        isActive:
          type: boolean
        experiences:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
      additionalProperties: false
    OperationType:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    Operation:
      type: object
      properties:
        operationType:
          $ref: '#/components/schemas/OperationType'
        path:
          type: string
          nullable: true
        op:
          type: string
          nullable: true
        from:
          type: string
          nullable: true
        value:
          nullable: true
      additionalProperties: false
    PutAdventureRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/LevelType'
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/AdventureType'
        id:
          type: string
          format: uuid
        codeRequired:
          type: boolean
        isActive:
          type: boolean
      additionalProperties: false
    GetAllAdventureLikesResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        adventureId:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        userPhoto:
          type: string
          nullable: true
      additionalProperties: false
    GetAllPagedAdventureLikesResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllAdventureLikesResponse'
          nullable: true
      additionalProperties: false
    PostAdventureLikesResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        adventureId:
          type: string
          format: uuid
        userName:
          type: string
          nullable: true
        userPhoto:
          type: string
          nullable: true
      additionalProperties: false
    GetAllPagedAdventureResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllAdventureResponse'
          nullable: true
      additionalProperties: false
    PostAdventureRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/LevelType'
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/AdventureType'
        codeRequired:
          type: boolean
      additionalProperties: false
    PostAdventureResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/LevelType'
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/AdventureType'
        id:
          type: string
          format: uuid
        likes:
          type: integer
          format: int64
        codeRequired:
          type: boolean
      additionalProperties: false
    GetByIdAdventureCodeResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
      additionalProperties: false
    GetUserLikedAdventureResponse:
      type: object
      properties:
        userLiked:
          type: boolean
      additionalProperties: false
    PostCheckAdventureCodeResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
      additionalProperties: false
    ActionType:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    GetAllAuditResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        parentId:
          type: string
          format: uuid
        entity:
          type: string
          nullable: true
        action:
          $ref: '#/components/schemas/ActionType'
        data:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    GetAllPagedAuditResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllAuditResponse'
          nullable: true
      additionalProperties: false
    GetAllCompanyResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        fantasyName:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        contactPhone:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    PutCompanyRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        fantasyName:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        contactPhone:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    GetAllPagedCompanyResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllCompanyResponse'
          nullable: true
      additionalProperties: false
    PostCompanyRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        fantasyName:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        contactPhone:
          type: string
          nullable: true
      additionalProperties: false
    PostCompanyResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        fantasyName:
          type: string
          nullable: true
        registrationNumber:
          type: string
          nullable: true
        contactEmail:
          type: string
          nullable: true
        contactPhone:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    GetAllExperienceResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        imagesUrl:
          type: array
          items:
            $ref: '#/components/schemas/ImageUrl'
          nullable: true
        videosUrl:
          type: array
          items:
            $ref: '#/components/schemas/VideoUrl'
          nullable: true
        codeRequired:
          type: boolean
        isActive:
          type: boolean
      additionalProperties: false
    PutExperienceRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        isActive:
          type: boolean
        codeRequired:
          type: boolean
      additionalProperties: false
    GetAllPagedExperienceResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllExperienceResponse'
          nullable: true
      additionalProperties: false
    PostExperienceRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        codeRequired:
          type: boolean
      additionalProperties: false
    PostExperienceResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        effectiveStartDate:
          type: string
          format: date-time
          nullable: true
        effectiveEndDate:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        codeRequired:
          type: boolean
      additionalProperties: false
    GetByIdExperienceCodeResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
      additionalProperties: false
    PostCheckExperienceCodeResponse:
      type: object
      properties:
        isSuccess:
          type: boolean
      additionalProperties: false
    NotificationType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      type: integer
      format: int32
    NotificationChannel:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    GeoLocation:
      type: object
      properties:
        date:
          type: string
          format: date-time
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        elevation:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          format: uuid
        userUpdated:
          type: string
          format: uuid
        version:
          $ref: '#/components/schemas/DocumentVersion'
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        isActive:
          type: boolean
        isAdmin:
          type: boolean
        isSuperAdmin:
          type: boolean
        isAngel:
          type: boolean
        defaultAngel:
          type: string
          format: uuid
          nullable: true
        defaultSponsor:
          type: string
          format: uuid
          nullable: true
        companies:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        location:
          $ref: '#/components/schemas/GeoLocation'
      additionalProperties: false
    GetAllNotificationResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/NotificationType'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
          nullable: true
        attributes:
          type: object
          additionalProperties:
            type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        id:
          type: string
          format: uuid
      additionalProperties: false
    PutNotificationRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/NotificationType'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
          nullable: true
        attributes:
          type: object
          additionalProperties:
            type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        id:
          type: string
          format: uuid
      additionalProperties: false
    GetAllPagedNotificationResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllNotificationResponse'
          nullable: true
      additionalProperties: false
    PostNotificationRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/NotificationType'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
          nullable: true
        attributes:
          type: object
          additionalProperties:
            type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
      additionalProperties: false
    PostNotificationResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        message:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/NotificationType'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannel'
          nullable: true
        attributes:
          type: object
          additionalProperties:
            type: string
          nullable: true
        user:
          $ref: '#/components/schemas/User'
        id:
          type: string
          format: uuid
      additionalProperties: false
    SponsorContact:
      type: object
      properties:
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    GetAllSponsorResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SponsorContact'
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        id:
          type: string
          format: uuid
        photoUrl:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    ProfilePhotoRequest:
      type: object
      properties:
        data:
          type: string
          format: byte
          nullable: true
        extension:
          type: string
          nullable: true
      additionalProperties: false
    PutSponsorRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SponsorContact'
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        id:
          type: string
          format: uuid
        profilePhoto:
          $ref: '#/components/schemas/ProfilePhotoRequest'
        isActive:
          type: boolean
      additionalProperties: false
    GetAllPagedSponsorResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllSponsorResponse'
          nullable: true
      additionalProperties: false
    PostSponsorRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SponsorContact'
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        profilePhoto:
          $ref: '#/components/schemas/ProfilePhotoRequest'
      additionalProperties: false
    PostSponsorResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        companyId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/SponsorContact'
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        id:
          type: string
          format: uuid
        photoUrl:
          type: string
          nullable: true
        isActive:
          type: boolean
      additionalProperties: false
    GetAllTemplateResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        businessId:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PutTemplateRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        businessId:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    GetAllPagedTemplateResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllTemplateResponse'
          nullable: true
      additionalProperties: false
    PostTemplateRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        businessId:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PostTemplateResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        businessId:
          type: integer
          format: int32
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    TrackSource:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    Statistic:
      type: object
      properties:
        totalTime:
          type: number
          format: double
        totalMovingTime:
          type: number
          format: double
        totalDistance:
          type: number
          format: double
        elevationGain:
          type: number
          format: double
        speed:
          type: number
          format: double
      additionalProperties: false
    MapCoordinate:
      type: object
      properties:
        maxLongitude:
          type: number
          format: double
        maxLatitude:
          type: number
          format: double
        minLongitude:
          type: number
          format: double
        minLatitude:
          type: number
          format: double
      additionalProperties: false
    GetAllTrackResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        source:
          $ref: '#/components/schemas/TrackSource'
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
        statistic:
          $ref: '#/components/schemas/Statistic'
        mapCoordinate:
          $ref: '#/components/schemas/MapCoordinate'
      additionalProperties: false
    PutTrackRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        source:
          $ref: '#/components/schemas/TrackSource'
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    GetAllPagedTrackResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllTrackResponse'
          nullable: true
      additionalProperties: false
    PostTrackRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        source:
          $ref: '#/components/schemas/TrackSource'
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PostTrackResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        source:
          $ref: '#/components/schemas/TrackSource'
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        id:
          type: string
          format: uuid
      additionalProperties: false
    PostTrackGeoDataResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        trackId:
          type: string
          format: uuid
        fileName:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
      additionalProperties: false
    WaypointType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    TrackGeoLocationWaypointDto:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        type:
          $ref: '#/components/schemas/WaypointType'
        location:
          type: array
          items:
            type: number
            format: double
          nullable: true
      additionalProperties: false
    TrackGeoLocationDto:
      type: object
      properties:
        experiences:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        trackId:
          type: string
          format: uuid
        adventureId:
          type: string
          format: uuid
        lines:
          type: array
          items:
            type: array
            items:
              type: number
              format: double
          nullable: true
        waypoints:
          type: array
          items:
            $ref: '#/components/schemas/TrackGeoLocationWaypointDto'
          nullable: true
      additionalProperties: false
    PutTrackStatisticRequest:
      type: object
      properties:
        totalTime:
          type: number
          format: double
        totalMovingTime:
          type: number
          format: double
        totalDistance:
          type: number
          format: double
        elevationGain:
          type: number
          format: double
        speed:
          type: number
          format: double
      additionalProperties: false
    TrailType:
      enum:
        - 1
        - 2
      type: integer
      format: int32
    GetAllTrailResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/TrailType'
        id:
          type: string
          format: uuid
        statistic:
          $ref: '#/components/schemas/Statistic'
        sponsors:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        angels:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        adventureName:
          type: string
          nullable: true
        adventureDescription:
          type: string
          nullable: true
        adventureLevel:
          $ref: '#/components/schemas/LevelType'
        adventureType:
          $ref: '#/components/schemas/AdventureType'
        photoUrl:
          type: string
          nullable: true
      additionalProperties: false
    PutTrailRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/TrailType'
        id:
          type: string
          format: uuid
        customValues:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    TrailResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        adventureId:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        statistic:
          $ref: '#/components/schemas/Statistic'
        adventureName:
          type: string
          nullable: true
        adventureLevel:
          $ref: '#/components/schemas/LevelType'
        adventureType:
          $ref: '#/components/schemas/AdventureType'
        photoUrl:
          type: string
          nullable: true
      additionalProperties: false
    UserResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        photoUrl:
          type: string
          nullable: true
        location:
          $ref: '#/components/schemas/GeoLocation'
      additionalProperties: false
    AdventureResponse:
      type: object
      properties:
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        level:
          $ref: '#/components/schemas/LevelType'
        type:
          $ref: '#/components/schemas/AdventureType'
      additionalProperties: false
    UserTrailStatusResponse:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    ActiveTrailResponse:
      type: object
      properties:
        trail:
          $ref: '#/components/schemas/TrailResponse'
        user:
          $ref: '#/components/schemas/UserResponse'
        adventure:
          $ref: '#/components/schemas/AdventureResponse'
        status:
          $ref: '#/components/schemas/UserTrailStatusResponse'
      additionalProperties: false
    GetAllActiveTrailByAngelResponse:
      type: object
      properties:
        trails:
          type: array
          items:
            $ref: '#/components/schemas/ActiveTrailResponse'
          nullable: true
        mapCoordinate:
          $ref: '#/components/schemas/MapCoordinate'
      additionalProperties: false
    GetAllPagedTrailResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllTrailResponse'
          nullable: true
      additionalProperties: false
    PostTrailRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/TrailType'
        id:
          type: string
          format: uuid
        customValues:
          type: object
          additionalProperties: {}
          nullable: true
      additionalProperties: false
    PostTrailResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        adventureId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
          nullable: true
        endDate:
          type: string
          format: date-time
          nullable: true
        type:
          $ref: '#/components/schemas/TrailType'
        id:
          type: string
          format: uuid
        sponsors:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        angels:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
        adventureName:
          type: string
          nullable: true
        adventureLevel:
          $ref: '#/components/schemas/LevelType'
        adventureType:
          $ref: '#/components/schemas/AdventureType'
        photoUrl:
          type: string
          nullable: true
      additionalProperties: false
    GetByIdTrailGeoDataetByIdResponse:
      type: object
      properties:
        data:
          type: string
          nullable: true
      additionalProperties: false
    PostTrailGeoDataResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        trailId:
          type: string
          format: uuid
        fileName:
          type: string
          nullable: true
        extension:
          type: string
          nullable: true
        data:
          type: string
          nullable: true
      additionalProperties: false
    TrailGeoDataRequest:
      type: object
      properties:
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
        elevation:
          type: number
          format: double
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    PostTrailChunckGeoDataRequest:
      type: object
      properties:
        lines:
          type: array
          items:
            $ref: '#/components/schemas/TrailGeoDataRequest'
          nullable: true
      additionalProperties: false
    GetAllUserResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        photoUrl:
          type: string
          nullable: true
        isActive:
          type: boolean
        isAdmin:
          type: boolean
        isSuperAdmin:
          type: boolean
        isAngel:
          type: boolean
        defaultAngel:
          type: string
          format: uuid
          nullable: true
        defaultSponsor:
          type: string
          format: uuid
          nullable: true
        companies:
          type: array
          items:
            type: string
            format: uuid
          nullable: true
      additionalProperties: false
    PutUserRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        profilePhoto:
          $ref: '#/components/schemas/ProfilePhotoRequest'
        isActive:
          type: boolean
        isAdmin:
          type: boolean
        isSuperAdmin:
          type: boolean
        isAngel:
          type: boolean
      additionalProperties: false
    GetAllPagedUserResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        firstRowOnPage:
          type: integer
          format: int32
        lastRowOnPage:
          type: integer
          format: int32
        results:
          type: array
          items:
            $ref: '#/components/schemas/GetAllUserResponse'
          nullable: true
      additionalProperties: false
    PostUserRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        profilePhoto:
          $ref: '#/components/schemas/ProfilePhotoRequest'
        isAdmin:
          type: boolean
        isSuperAdmin:
          type: boolean
        isAngel:
          type: boolean
      additionalProperties: false
    PostUserResponse:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        id:
          type: string
          format: uuid
        photoUrl:
          type: string
          nullable: true
        isActive:
          type: boolean
        isAdmin:
          type: boolean
        isSuperAdmin:
          type: boolean
        isAngel:
          type: boolean
        defaultAngel:
          type: string
          format: uuid
          nullable: true
        defaultSponsor:
          type: string
          format: uuid
          nullable: true
      additionalProperties: false
    PostUserAccessTokenRequest:
      type: object
      properties:
        phone:
          type: string
          nullable: true
        code:
          type: string
          nullable: true
      additionalProperties: false
    PostUserAccessTokenResponse:
      type: object
      properties:
        id_token:
          type: string
          nullable: true
      additionalProperties: false
    PostPostUserResendCodeRequest:
      type: object
      properties:
        phone:
          type: string
          nullable: true
        hash:
          type: string
          nullable: true
      additionalProperties: false
    PostUserSetupAngelRequest:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
          nullable: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
        userCreated:
          type: string
          nullable: true
        userUpdated:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
      additionalProperties: false
    PostUserSignInRequest:
      type: object
      properties:
        phone:
          type: string
          nullable: true
        hash:
          type: string
          nullable: true
      additionalProperties: false
    PostUserSignInResponse:
      type: object
      properties:
        message:
          type: string
          nullable: true
      additionalProperties: false
    PutUserLocationRequest:
      required:
        - date
        - latitude
        - longitude
      type: object
      properties:
        date:
          type: string
          format: date-time
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: "JWT Authorization header using the Bearer scheme. \r\n\r\n Enter 'Bearer' [space] and then your token in the text input below.\r\n\r\nExample: \"Bearer 12345abcdef\""
      name: Authorization
      in: header
security:
  - Bearer: []
